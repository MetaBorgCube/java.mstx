import java.types.references
import java.expressions.variables

// field-declaration-ok : scope * FieldDeclaration

field-declaration-ok(s, fd) :- fd match
  { FieldDecl(fieldModifiers, unannType, varDecls) -> {ty}
      unann-type-ok(s, unannType, ty)
    , field-decls-ok(s, varDecls, s, ty)
  }.

// field-decls-ok : scope * list(VarDecl) * Type

field-decls-ok(s, vds, s_def, ty) :- vds match
  { []     -> true
  | vd:vds -> field-decl-ok(s, vd, s_def, ty), field-decls-ok(s, vds, s_def, ty)
  }.

// field-decl-ok : scope * VarDecl * Type

field-decl-ok(s, vd, s_def, ty) :- vd match
  { VariableDeclInit(vdi, vi) ->
      field-decl-id-ok(vdi, s_def, ty)
    , variable-initializer-ok(s, vi, ty)
  | VarDeclId2VarDecl(vdi) ->
      field-decl-id-ok(vdi, s_def, ty)
  }.

// field-decl-id-ok : VarDeclId * scope * Type

field-decl-id-ok(vdi, s_def, ty) :- vdi match
  { VariableDecl(id) -> {s_var}
      new s_var -> (id, ty)
    , s_def -[ `FIELD ]-> s_var
  }.
