#!/usr/bin/env bash

set -eu

if true || test -t 1; then
   SUCCESS="\e[32mSUCCESS\e[0m"
   FAILURE="\e[31mFAILURE\e[0m"
   PANIC="\e[34mPANIC\e[0m"
else
   SUCCESS="SUCCESS"
   FAILURE="FAILURE"
   PANIC="PANIC"
fi

readonly DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

readonly JAVADIR="$DIR/../lib/java.spfx/lang.java"
if [ ! -d "$JAVADIR" ]; then
    printf "[$PANIC] Cannot find directory $JAVADIR\n"
    exit 1
fi

readonly SUNSHINE_JAR="$DIR/../bin/org.metaborg.sunshine2-2.6.0-SNAPSHOT.jar"
if [ ! -f "$SUNSHINE_JAR" ]; then
    printf "[$PANIC] Cannot find file $SUNSHINE_JAR\n"
    exit 1
fi

readonly SUNSHINE="java -jar $SUNSHINE_JAR"

statix check -I $DIR/../src/ java 2>&1
stx_runs=${PIPESTATUS[0]}
if [ ! $stx_runs ]; then
    printf "[$PANIC] Cannot run statix\n"
    exit 1
fi

function expect {
    if [ $1 -eq 0 ]; then printf "pass"; else printf "fail"; fi
}

function agree {
    [ $1 -eq 0 -a $2 -eq 0 ] || [ $1 -ne 0 -a $2 -ne 0 ]
}

for testfile in "$@"
do
    testname="${testfile%.java}"
    infiles="$(find "$testfile" -type f -name '*.java')"

    if ! (echo "$testname" | grep -s "\.no")
    then
        positive=0
    else
        positive=1
    fi
    echo "Expect $(expect $positive)"

    ## Compile Java classes
    classes=$(mktemp -d -p . "${testname}.XXXXX.classes")
    javac -d "$classes" $infiles 2>&1 | grep -v "Picked up JAVA_TOOL_OPTIONS" | tee "${testname}.javac.out"
    java_ok=${PIPESTATUS[0]}
    rm -rf "$classes"
    echo "JavaC $(expect $java_ok)"
    if ! agree $java_ok $positive; then
        printf "[$PANIC:DISAGREE] $testfile\n"
        continue
    fi

    ## Parse files to ATerm
    testaterm=$(mktemp -p . "${testname}.XXXXX.aterm")
    printf "Program([" > "$testaterm"
    sep=""
    for infile in $infiles
    do
       aterm="${infile%.java}.aterm"
       if [ -f "$aterm" -a ! "$infile" -nt "$aterm" ]; then
           echo "Use cached $aterm"
       else
           echo "Parse $infile to $aterm"
           jav="${infile%.java}.jav"
           cp "$infile" "$jav"
           ${SUNSHINE} transform -n "Explicate injections" -l "${JAVADIR}" -p . -i "$jav" 2>&1 >/dev/null | tee "${infile%.java}.parse.out"
           parse_ok=${PIPESTATUS[0]}
           if [ $parse_ok -ne 0 ]; then
               printf "[$PANIC:PARSE] Parsing failed for $infile\n"
               continue 2
           fi
           rm -f "$jav"
       fi
       printf "$sep" >> "$testaterm"
       if [ -z "$sep" ]; then sep=", "; fi
       cat "$aterm" >> "$testaterm"
    done
    printf "])" >> "$testaterm"

    ## Run Statix on the ATerm
    statix check -I $DIR/../src/ java "$testaterm" 2>&1 | tee "${testname}.stx.out"
    stx_ok=${PIPESTATUS[0]}
    rm -f "$testaterm"
    echo "Statix $(expect $stx_ok)"

    # compute test result by comparison
    if [ $stx_ok -eq 65 ]; then
        printf "[$PANIC:STUCK] $testfile\n"
    elif agree $stx_ok $positive; then
        printf "[$SUCCESS] $testfile\n"
    else
        printf "[$FAILURE] $testfile\n"
    fi
done
