#!/usr/bin/env bash

set -eu

readonly DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

readonly JAVADIR="$DIR/../lib/java.spfx/lang.java"
if [ ! -d "$JAVADIR" ]; then
    echo "FAILURE: Cannot find directory $JAVADIR"
    exit 1
fi

readonly SUNSHINE_JAR="$DIR/../bin/org.metaborg.sunshine2-2.6.0-SNAPSHOT.jar"
if [ ! -f "$SUNSHINE_JAR" ]; then
    echo "FAILURE: Cannot find file $SUNSHINE_JAR"
    exit 1
fi

readonly SUNSHINE="java -jar $SUNSHINE_JAR"

statix check -I $DIR/../src/ java 2>&1
stx_runs=${PIPESTATUS[0]}
if [ ! $stx_runs ]; then
    echo "FAILURE: Cannot run statix"
    exit 1
fi

if true || test -t 1; then
   SUCCESS="[\e[32mSUCCESS\e[0m]"
   FAILURE="[\e[31mFAILURE\e[0m]"
   STUCK="[\e[34mSTUCK\e[0m]"
else
   SUCCESS="[SUCCESS]"
   FAILURE="[FAILURE]"
   STUCK="[STUCK]"
fi

function agree {
    [ $1 -eq 0 -a $2 -eq 0 ] || [ $1 -ne 0 -a $2 -ne 0 ]
}

for testfile in "$@"
do
    testname="${testfile%.java}"
    infiles="$(find "$testfile" -type f -name '*.java')"

    if ! (echo "$testname" | grep -s ".no")
    then
        positive=0
        echo "Expect pass"
    else
        positive=1
        echo "Expect fail"
    fi

    ## Compile Java classes
    classes=$(mktemp -d -p . "${testname}.XXXXX.classes")
    javac -d "$classes" $infiles 2>&1 | tee "${testname}.javac.out"
    java_ok=${PIPESTATUS[0]}
    rm -rf "$classes"
    if [ $java_ok -eq 0 ]; then
        echo "JavaC pass"
    else
        echo "JavaC fail"
    fi

    ## Parse files to ATerm
    testaterm=$(mktemp -p . "${testname}.XXXXX.aterm")
    printf "Program([" > "$testaterm"
    sep=""
    for infile in $infiles
    do
       aterm="${infile%.java}.aterm"
       if [ -f "$aterm" -a ! "$infile" -nt "$aterm" ]; then
           echo "Use cached $aterm"
       else
           echo "Parse $infile to $aterm"
           jav="${infile%.java}.jav"
           cp "$infile" "$jav"
           ${SUNSHINE} transform -n "Explicate injections" -l "${JAVADIR}" -p . -i "$jav" >/dev/null 2>&1
           rm -f "$jav"
       fi
       printf "$sep" >> "$testaterm"
       if [ -z "$sep" ]; then sep=", "; fi
       cat "$aterm" >> "$testaterm"
    done
    printf "])" >> "$testaterm"

    ## Run Statix on the ATerm
    statix check -I $DIR/../src/ java "$testaterm" 2>&1 | tee "${testname}.stx.out"
    stx_ok=${PIPESTATUS[0]}
    rm -f "$testaterm"
    if [ $stx_ok -eq 0 ]; then
        echo "Statix pass"
    else
        echo "Statix fail"
    fi

    # compute test result by comparison
    if [ $stx_ok -eq 65 ]; then
        printf "$STUCK $testfile\n"
    elif agree $stx_ok $java_ok && agree $java_ok $positive; then
        printf "$SUCCESS $testfile\n"
    else
        printf "$FAILURE $testfile\n"
    fi
done
